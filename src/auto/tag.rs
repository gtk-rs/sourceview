// This file was generated by gir (3c73dd9+) from gir-files (2e2a9ca)
// DO NOT EDIT

use ffi;
use glib;
#[cfg(feature = "v3_20")]
use glib::Value;
use glib::object::IsA;
use glib::translate::*;
#[cfg(feature = "v3_20")]
use gobject_ffi;

glib_wrapper! {
    pub struct Tag(Object<ffi::GtkSourceTag>);

    match fn {
        get_type => || ffi::gtk_source_tag_get_type(),
    }
}

impl Tag {
    //#[cfg(feature = "v3_20")]
    //pub fn new<'a, P: Into<Option<&'a str>>>(name: P) -> Tag {
    //    unsafe { TODO: call ffi::gtk_source_tag_new() }
    //}
}

pub trait TagExt {
    #[cfg(feature = "v3_20")]
    fn get_property_draw_spaces(&self) -> bool;

    #[cfg(feature = "v3_20")]
    fn set_property_draw_spaces(&self, draw_spaces: bool);

    #[cfg(feature = "v3_20")]
    fn get_property_draw_spaces_set(&self) -> bool;

    #[cfg(feature = "v3_20")]
    fn set_property_draw_spaces_set(&self, draw_spaces_set: bool);
}

impl<O: IsA<Tag> + IsA<glib::object::Object>> TagExt for O {
    #[cfg(feature = "v3_20")]
    fn get_property_draw_spaces(&self) -> bool {
        let mut value = Value::from(&false);
        unsafe {
            gobject_ffi::g_object_get_property(self.to_glib_none().0, "draw-spaces".to_glib_none().0, value.to_glib_none_mut().0);
        }
        value.get().unwrap()
    }

    #[cfg(feature = "v3_20")]
    fn set_property_draw_spaces(&self, draw_spaces: bool) {
        unsafe {
            gobject_ffi::g_object_set_property(self.to_glib_none().0, "draw-spaces".to_glib_none().0, Value::from(&draw_spaces).to_glib_none().0);
        }
    }

    #[cfg(feature = "v3_20")]
    fn get_property_draw_spaces_set(&self) -> bool {
        let mut value = Value::from(&false);
        unsafe {
            gobject_ffi::g_object_get_property(self.to_glib_none().0, "draw-spaces-set".to_glib_none().0, value.to_glib_none_mut().0);
        }
        value.get().unwrap()
    }

    #[cfg(feature = "v3_20")]
    fn set_property_draw_spaces_set(&self, draw_spaces_set: bool) {
        unsafe {
            gobject_ffi::g_object_set_property(self.to_glib_none().0, "draw-spaces-set".to_glib_none().0, Value::from(&draw_spaces_set).to_glib_none().0);
        }
    }
}
